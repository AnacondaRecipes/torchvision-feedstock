{% set version = "0.18.0" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
# torchvision requires that CUDA major and minor versions match with pytorch
# https://github.com/pytorch/vision/blob/fa99a5360fbcd1683311d57a76fcc0e7323a4c1e/torchvision/extension.py#L79C1-L85C1
{% set torch_proc_type = "cuda" ~ cuda_compiler_version | replace('.', '') if cuda_compiler_version != "None" else "cpu" %}
# Upstream has specific compatability ranges for pytorch and python which are
# updated every 0.x release. https://github.com/pytorch/vision#installation
{% set compatible_pytorch = "2.3" %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.2").split(".")[0] | int %}
{% endif %}

package:
  name: torchvision
  version: {{ version }}

source:
  url: https://github.com/pytorch/vision/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 3e61cbac33986a862a59cd733fd65da8b2c2a6160a66556cfa0e850f62fd43c7
  patches:
    # seems to be necessary for aarch???
    - patches/0001-Monkeypatch-TORCH_LIB_PATH.patch
    # backport https://github.com/pytorch/vision/pull/8463 for numpy 2.0 compat
    - patches/0002-Make-adjust_hue-work-with-numpy-2.0-8463.patch
    - patches/0003-dont-test-for-turbo-jpeg.patch

build:
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  number: 0
  skip: true  # [s390x]
  # no CUDA-enabled pytorch on aarch yet
  skip: true  # [cuda_compiler_version != "None" and aarch64]
  # pytorch 2.3 cuda not supported for python 3.12
  skip: true  # [(cuda_compiler_version != "None") and (compatible_pytorch == "2.3") and (py==312)]
  missing_dso_whitelist:
    - "**/libc10.so"              # [linux]
    - "**/libtorch_cpu.so"        # [linux]
    - "**/libc10_cuda.so"         # [cuda_compiler_version != "None" and linux]
    - "**/libtorch_cuda.so"       # [cuda_compiler_version != "None" and linux]
    - "**/ld64.so.1"              # [s390x]
    - "**/libc10.dylib"           # [osx]
    - "**/libtorch_cpu.dylib"     # [osx]
    - "**/c10.dll"                # [win]
    - "**/torch_cpu.dll"          # [win]

requirements:
  build:
    #- {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    {% if cuda_major >= 12 %}
    - {{ compiler('cuda') }}                 # [cuda_compiler_version != "None"]
    - libcublas-dev                          # [build_platform != target_platform]
    - libcusolver-dev                        # [build_platform != target_platform]
    - libcusparse-dev                        # [build_platform != target_platform]
    {% endif %}
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pytorch ={{ compatible_pytorch }}.*={{ torch_proc_type }}*  # [build_platform != target_platform]
  host:
    - python
    - pip
    - setuptools
    - wheel
    - cudnn                                      # [cuda_compiler_version != "None"]
    {% if cuda_major >= 12 %}                    # [cuda_compiler_version != "None"]
    - libcublas-dev                              # [cuda_compiler_version != "None"]
    - libcusolver-dev                            # [cuda_compiler_version != "None"]
    - libcusparse-dev                            # [cuda_compiler_version != "None"]
    {% endif %}                                  # [cuda_compiler_version != "None"]
    - cudatoolkit {{ cuda_compiler_version }}    # [cuda_compiler_version == "11.8"]
    - cuda-version {{ cuda_compiler_version }}   # [cuda_compiler_version != "None"]
    # split off image/video into separate outputs?
    - jpeg {{ jpeg }}
    - libpng {{ libpng }}
    - ffmpeg
    - numpy
    # exclude 8.3.0 and 8.3.1 specifically due to pytorch/vision#4146, python-pillow/Pillow#5571
    - pillow >=5.3.0,!=8.3.0,!=8.3.1
    #- libtorch
    - pytorch ={{ compatible_pytorch }}.*=*{{ torch_proc_type }}*
    - requests
  run:
    - python
    - pytorch ={{ compatible_pytorch }}.*=*{{ torch_proc_type }}*
    - {{ pin_compatible('cudnn') }}           # [cuda_compiler_version != "None"]
    - cudatoolkit {{ cuda_compiler_version }}    # [cuda_compiler_version == "11.8"]
    - cuda-version {{ cuda_compiler_version }}   # [cuda_compiler_version != "None"]
    - pillow >=5.3.0,!=8.3.0,!=8.3.1
    - requests
    - __cuda >={{ cuda_compiler_version }}    # [cuda_compiler_version != "None"]

test:
  requires:
    - pip
    - pytest
    - expecttest
    - scipy
    - pytest-mock
  source_files:
    - test
    - gallery
  imports:
    - torchvision
    - torchvision.datasets
    - torchvision.transforms
    - torchvision.models
    - torchvision.utils
  commands:
    - pip check
    - python test/smoke_test.py
    # Vast majority of tests pass. Failures can be seen in logs. Tests crash on Windows due to a memoryerror.
    - pytest --verbose --durations=50 test/ || true    # [not win]

about:
  home: https://pytorch.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Image and video datasets and models for torch deep learning
  description: |
    The torchvision package consists of popular datasets, model architectures, and common image transformations for computer vision.
  dev_url: https://github.com/pytorch/vision
  doc_url: https://pytorch.org/docs/stable/index.html

extra:
  recipe-maintainers:
    - katietz
    - jjhelmus
    - nehaljwani
    - hmaarrfk
    - h-vetinari
  skip-lints:
    - python_build_tool_in_run
