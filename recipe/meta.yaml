{% set version = "0.11.3" %}

package:
  name: torchvision
  version: {{ version }}

source:
  fn: torchvision-{{ version }}.tar.gz
  url: https://github.com/pytorch/vision/archive/v{{ version }}.tar.gz
  sha256: b4c51d27589783e6e6941ecaa67b55f6f41633874ec37f80b64a0c92c3196e0c

build:
  number: 0
  skip: True  # [py<36 or py>39]
  string: cuda{{ cudatoolkit | replace('.', '') }}py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}  # [pytorch_variant == "gpu"]
  string: cpu_py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}                                      # [pytorch_variant == "cpu"]
  script:
    - export NVCC_FLAGS="-ccbin ${CC}"
    - export FORCE_CUDA=0  # [pytorch_variant != "gpu"]
    - LDFLAGS="${LDFLAGS//-Wl,-z,now/-Wl,-z,lazy}"
    - export TORCHVISION_INCLUDE="${PREFIX}/include"
    - "{{ PYTHON }} -m pip install . -vv"
  missing_dso_whitelist:
    - "$RPATH/libc10.so"           # [linux]
    - "$RPATH/libc10.dylib"        # [osx]
    - "$RPATH/libtorch_cpu.so"     # [linux]
    - "$RPATH/libtorch_cpu.dylib"  # [osx]
    - "$RPATH/libc10.so"           # [linux]
    - "$RPATH/libc10.dylib"        # [osx]
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    # GPU requirements
    - cudatoolkit {{ cudatoolkit }}*  # [pytorch_variant == "gpu"]
    # other requirements
    - python
    - setuptools
    - pip
    - pytorch ==1.10.2
    - pillow >=5.3.0,!=8.3.*
    # - ffmpeg
  run:
    # - _pytorch_select * cpu*             # [pytorch_variant == "cpu"]
    # - _pytorch_select * gpu*             # [pytorch_variant == "gpu"]
    # GPU requirements
    - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}  # [pytorch_variant == "gpu"]
    # other requirements
    - python
    - setuptools
    - pip
    - pytorch ==1.10.2
    - pillow >=5.3.0,!=8.3.*
    # - ffmpeg

test:
  imports:
    - torchvision
    - torchvision.datasets
    - torchvision.transforms
    - torchvision.models
    - torchvision.utils
  source_files:
    - test
  requires:
    - pytest
    - pytest-mock
    - scipy
    - requests
  commands:
    pytest . -k "not (video or test_url_is_accessible)"  # [osx]
    pytest . -k "not (video or test_url_is_accessible or test_maskrcnn_resnet50_fpn_cpu)"  # [linux]
about:
  home: http://pytorch.org/
  license: BSD 3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Image and video datasets and models for torch deep learning
  dev_url: https://github.com/pytorch/vision
  doc_url: http://pytorch.org/docs/master/torchvision

extra:
  recipe-maintainers:
    - katietz
    - jjhelmus
    - nehaljwani
