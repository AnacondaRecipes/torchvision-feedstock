{% set version = "0.15.2" %}

package:
  name: torchvision
  version: {{ version }}

source:
  fn: torchvision-{{ version }}.tar.gz
  url: https://github.com/pytorch/vision/archive/v{{ version }}.tar.gz
  sha256: 1efcb80e0a6e42c54f07ee16167839b4d302aeeecc12839cc47c74b06a2c20d4

build:
  number: 0
  skip: True  # [py<37 or s390x or ppc64le]
  string: cuda{{ cudatoolkit | replace('.', '') }}py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}  # [pytorch_variant == "gpu"]
  string: cpu_py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}                                      # [pytorch_variant == "cpu"]
  script:
    - export NVCC_FLAGS="-ccbin ${CC}"  # [not win]
    - set FORCE_CUDA=0  # [win and (pytorch_variant != "gpu")]
    - export FORCE_CUDA=0  # [not win and (pytorch_variant != "gpu")]
    - LDFLAGS="${LDFLAGS//-Wl,-z,now/-Wl,-z,lazy}"    # [not win]
    - set "TORCHVISION_INCLUDE=%LIBRARY_INC%"         # [win]
    - export TORCHVISION_INCLUDE="${PREFIX}/include"  # [not win]
    - "{{ PYTHON }} -m pip install . -vvv --no-deps --no-build-isolation"
  missing_dso_whitelist:
    - "$RPATH/libc10.so"           # [linux]
    - "$RPATH/libc10.dylib"        # [osx]
    - "$RPATH/libtorch_cpu.so"     # [linux]
    - "$RPATH/libtorch_cpu.dylib"  # [osx]
    - "$RPATH/libc10.so"           # [linux]
    - "$RPATH/libc10.dylib"        # [osx]
    - "$RPATH/c10.dll"             # [win]
    - "$RPATH/torch_cpu.dll"       # [win] 

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # libpng and libjpeg must be available at compilation time in order to be available,
    # see https://github.com/pytorch/vision/tree/v0.11.3#image-backend
    - jpeg      # [not win]
    - libpng
  host:
    # GPU requirements
    - cudatoolkit {{ cudatoolkit }}*  # [pytorch_variant == "gpu"]
    # other requirements
    - python
    - jpeg      # [not win]
    - libpng
    - pip
    - pillow 9.4.0
    - pytorch
    - wheel
    # 2022/08/25: Not requiring ffmpeg because torchvision has bugs with certain ffmpeg versions, 
    # see https://github.com/pytorch/vision/issues/5419#issuecomment-1193483864
    # and https://github.com/conda-forge/torchvision-feedstock/commit/4ec4b5f4eb4889dbb1f8da34662ea622bb4b3828
    # - ffmpeg
  run:
    # - _pytorch_select * cpu*             # [pytorch_variant == "cpu"]
    # - _pytorch_select * gpu*             # [pytorch_variant == "gpu"]
    # GPU requirements
    - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}  # [pytorch_variant == "gpu"]
    # other requirements
    - python
    # Numpy pinnings aligned with the pytorch recipe,
    # see https://github.com/AnacondaRecipes/pytorch-feedstock/blob/ab185825c85cce2761ada2fc519b986845ddeb7d/recipe/meta.yaml#L121
    - numpy {{ numpy }}
    - pillow >=5.3.0,!=8.3.*
    - pytorch
    - requests
    - setuptools
    # - ffmpeg
    - typing_extensions

# Skip test_url_is_accessible instead of hitting 20+ servers per run, since
# each server might be occasionally unresponsive and end up failing our CI
{% set tests_to_skip = "test_url_is_accessible" %}

# 2022/08/30: Skipping the av tests (they require module 'av'): ModuleNotFoundError: No module named 'av',
# because the av package depends on ffmpeg, which we are not requiring as a run requirement because torchvision has bugs with certain ffmpeg versions.
{% set tests_to_skip = tests_to_skip + " or test_classes or test_feature_types or test_feature_types or test_is_valid_file or test_num_examples or test_smoke or test_str_smoke or test_transforms" %}
# 2022/08/30: AssertionError: Tensor-likes are not equal!
{% set tests_to_skip = tests_to_skip + " or test_adjust_gamma" %}
# 2022/08/30: This test seems to just destroy the memory of the system.
{% set tests_to_skip = tests_to_skip + " or test_forward_backward" %}
{% set tests_to_skip = tests_to_skip + " or test_jit_forward_backward" %}

test:
  imports:
    - torchvision
    - torchvision.datasets
    - torchvision.transforms
    - torchvision.models
    - torchvision.utils
  source_files:
    - test
  requires:
    - pip
    - pytest
    - pytest-mock
    - scipy
    # For pkg_resources
    - setuptools
  commands:
    - pip check || true      # [not win]
    - pip check || (exit 1)  # [win]
    # CIs do not have enough resources to run the full suite of model tests
    - rm -f test/test_models.py test/test_extended_models.py     # [not win]
    - del /f test\test_models.py test\test_extended_models.py    # [win]
    - cp -r ../work_moved_torchvision-{{ version }}-{{ pytorch_variant }}_py{{ CONDA_PY }}h*_{{ PKG_BUILDNUM }}_*/references .  # [not win]
    - xcopy ../work_moved_torchvision-{{ version }}-{{ pytorch_variant }}_py{{ CONDA_PY }}h*_{{ PKG_BUILDNUM }}_*/references . /E /H /C /I  # [win]
    # 2022/12/5: Unexpected python error on osx-64 for python 3.10: `Abort trap: 6 pytest test/`
    #- pytest -v -k "not ({{ tests_to_skip }})" test/  # [(osx and x86_64) and py<310]
    - pytest -v -k "not ({{ tests_to_skip }})" test/  # [(osx and arm64)]
    - pytest -v -k "not ({{ tests_to_skip }} or test_frozenbatchnorm2d_eps)" test/  # [linux and aarch64]
    - pytest -v -k "not ({{ tests_to_skip }} or test_maskrcnn_resnet50_fpn_cpu)" test/  # [linux and (not aarch64)]

about:
  home: https://pytorch.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Image and video datasets and models for torch deep learning
  description: |
    The torchvision package consists of popular datasets, model architectures, and common image transformations for computer vision.
  dev_url: https://github.com/pytorch/vision
  doc_url: https://pytorch.org/docs/stable/index.html

extra:
  recipe-maintainers:
    - katietz
    - jjhelmus
    - nehaljwani
