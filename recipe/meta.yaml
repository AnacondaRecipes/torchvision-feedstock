{% set version = "0.11.3" %}

package:
  name: torchvision
  version: {{ version }}

source:
  fn: torchvision-{{ version }}.tar.gz
  url: https://github.com/pytorch/vision/archive/v{{ version }}.tar.gz
  sha256: b4c51d27589783e6e6941ecaa67b55f6f41633874ec37f80b64a0c92c3196e0c
  patches:
    # https://github.com/pytorch/vision/pull/5261
    - patches/0001-avoid-hard-coded-gcc.patch

build:
  number: 0
  skip: True  # [py<36 or py>39 or s390x or ppc64le]
  string: cuda{{ cudatoolkit | replace('.', '') }}py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}  # [pytorch_variant == "gpu"]
  string: cpu_py{{ CONDA_PY }}h{{PKG_HASH}}_{{ PKG_BUILDNUM }}                                      # [pytorch_variant == "cpu"]
  script:
    - export NVCC_FLAGS="-ccbin ${CC}"  # [not win]
    - set FORCE_CUDA=0  # [win and (pytorch_variant != "gpu")]
    - export FORCE_CUDA=0  # [not win and (pytorch_variant != "gpu")]
    - LDFLAGS="${LDFLAGS//-Wl,-z,now/-Wl,-z,lazy}"    # [not win]
    - set "TORCHVISION_INCLUDE=%LIBRARY_INC%"         # [win]
    - export TORCHVISION_INCLUDE="${PREFIX}/include"  # [not win]
    - "{{ PYTHON }} -m pip install . -vv"
  missing_dso_whitelist:
    - "$RPATH/libc10.so"           # [linux]
    - "$RPATH/libc10.dylib"        # [osx]
    - "$RPATH/libtorch_cpu.so"     # [linux]
    - "$RPATH/libtorch_cpu.dylib"  # [osx]
    - "$RPATH/libc10.so"           # [linux]
    - "$RPATH/libc10.dylib"        # [osx]
    - "$RPATH/c10.dll"             # [win]
    - "$RPATH/torch_cpu.dll"       # [win] 

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # libpng and libjpeg must be available at compilation time in order to be available,
    # see https://github.com/pytorch/vision/tree/v0.11.3#image-backend
    - jpeg      # [not win]
    - libpng
    - m2-patch  # [win]
    - patch     # [not win]
    - sysroot_linux-64 ==2.17         # [linux64]
  host:
    # GPU requirements
    - cudatoolkit {{ cudatoolkit }}*  # [pytorch_variant == "gpu"]
    # other requirements
    - python
    - jpeg      # [not win]
    - libpng
    - pip
    - pillow >=5.3.0,!=8.3.*
    - pytorch ==1.10.2
    - setuptools
    # - ffmpeg
  run:
    # - _pytorch_select * cpu*             # [pytorch_variant == "cpu"]
    # - _pytorch_select * gpu*             # [pytorch_variant == "gpu"]
    # GPU requirements
    - {{ pin_compatible('cudatoolkit', max_pin='x.x') }}  # [pytorch_variant == "gpu"]
    # other requirements
    - python
    - {{ pin_compatible('numpy') }}
    - pillow >=5.3.0,!=8.3.*
    - pytorch ==1.10.2
    - setuptools
    # - ffmpeg

{% set tests_to_skip = "video or test_url_is_accessible" %}
# Skip some tests that require module 'av': ModuleNotFoundError: No module named 'av'
{% set tests_to_skip = tests_to_skip + " or test_classes or test_feature_types or test_feature_types or test_is_valid_file or test_num_examples or test_smoke or test_str_smoke or test_transforms" %}
# AssertionError: Tensor-likes are not equal!
{% set tests_to_skip = tests_to_skip + " or test_adjust_gamma" %}

test:
  imports:
    - torchvision
    - torchvision.datasets
    - torchvision.transforms
    - torchvision.models
    - torchvision.utils
  source_files:
    - test
  requires:
    - pip
    - pytest
    - pytest-mock
    - scipy
    - requests
    # For pkg_resources
    - setuptools
  commands:
    # scipy 1.7.3 has requirement numpy<1.23.0,>=1.16.5, but you have numpy 1.23.1.
    - python -m pip check || true    # [not win]
    #- python -m pip check || exit 1  # [win]
    # CIs do not have enough resources to run the full suite of model tests
    - rm -f test/test_models.py      # [unix]
    - del /f test\test_models.py     # [win]
    - pytest --verbose -k "not ({{ tests_to_skip }})" test/  # [osx]
    - pytest --verbose -k "not ({{ tests_to_skip }} or test_maskrcnn_resnet50_fpn_cpu)" test/  # [linux]

about:
  home: https://pytorch.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Image and video datasets and models for torch deep learning
  dev_url: https://github.com/pytorch/vision
  doc_url: https://pytorch.org/docs/master/torchvision

extra:
  recipe-maintainers:
    - katietz
    - jjhelmus
    - nehaljwani
